/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package editorTexto;

import java.awt.Font;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.stream.FileImageInputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Document;

/**
 *
 * @author pedro.rinpiz
 */
public class FrmPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form FrmPrincipal
     */
    private JFileChooser fileDialog;
    private File editFile;
    private String fuente;
    private int tamanioFuente;

    public FrmPrincipal() {
        super("Block de Notas");
         fileDialog = new JFileChooser();
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pnTxt = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        btArchivo = new javax.swing.JMenu();
        btNuevo = new javax.swing.JMenuItem();
        btAbrir = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        btGuardar = new javax.swing.JMenuItem();
        btGuardarComo = new javax.swing.JMenuItem();
        btSalir = new javax.swing.JMenuItem();
        btEdicion = new javax.swing.JMenu();
        btCortar = new javax.swing.JMenuItem();
        btCopiar = new javax.swing.JMenuItem();
        btPegar = new javax.swing.JMenuItem();
        btAvanzado = new javax.swing.JMenu();
        btNegrita = new javax.swing.JMenuItem();
        btCursiva = new javax.swing.JMenuItem();
        btSubrayado = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        btFuente = new javax.swing.JMenuItem();
        btTamaño = new javax.swing.JMenuItem();
        btColor = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(pnTxt);

        btArchivo.setText("Archivo");

        btNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btNuevo.setText("Nuevo");
        btNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoActionPerformed(evt);
            }
        });
        btArchivo.add(btNuevo);

        btAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btAbrir.setText("Abrir...");
        btAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAbrirActionPerformed(evt);
            }
        });
        btArchivo.add(btAbrir);
        btArchivo.add(jSeparator1);

        btGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btGuardar.setText("Guardar...");
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });
        btArchivo.add(btGuardar);

        btGuardarComo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btGuardarComo.setText("Guardar como...");
        btGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarComoActionPerformed(evt);
            }
        });
        btArchivo.add(btGuardarComo);

        btSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btSalir.setText("Salir");
        btSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalirActionPerformed(evt);
            }
        });
        btArchivo.add(btSalir);

        jMenuBar1.add(btArchivo);

        btEdicion.setText("Edición");

        btCortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btCortar.setText("Cortar");
        btCortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCortarActionPerformed(evt);
            }
        });
        btEdicion.add(btCortar);

        btCopiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btCopiar.setText("Copiar");
        btCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCopiarActionPerformed(evt);
            }
        });
        btEdicion.add(btCopiar);

        btPegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btPegar.setText("Pegar");
        btPegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPegarActionPerformed(evt);
            }
        });
        btEdicion.add(btPegar);

        jMenuBar1.add(btEdicion);

        btAvanzado.setText("Avanzado");

        btNegrita.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btNegrita.setText("Negrita");
        btNegrita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNegritaActionPerformed(evt);
            }
        });
        btAvanzado.add(btNegrita);

        btCursiva.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btCursiva.setText("Cursiva");
        btCursiva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCursivaActionPerformed(evt);
            }
        });
        btAvanzado.add(btCursiva);

        btSubrayado.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btSubrayado.setText("Subrayado");
        btSubrayado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSubrayadoActionPerformed(evt);
            }
        });
        btAvanzado.add(btSubrayado);
        btAvanzado.add(jSeparator2);

        btFuente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btFuente.setText("Fuente");
        btFuente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFuenteActionPerformed(evt);
            }
        });
        btAvanzado.add(btFuente);

        btTamaño.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btTamaño.setText("Tamaño");
        btTamaño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTamañoActionPerformed(evt);
            }
        });
        btAvanzado.add(btTamaño);

        btColor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btColor.setText("Color");
        btColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btColorActionPerformed(evt);
            }
        });
        btAvanzado.add(btColor);

        jMenuBar1.add(btAvanzado);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoActionPerformed
        nuevo();
    }//GEN-LAST:event_btNuevoActionPerformed

    private void btAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAbrirActionPerformed
        abrir();

    }//GEN-LAST:event_btAbrirActionPerformed

    private void abrir() throws HeadlessException {
        fileDialog.setDialogTitle("Seleccione el archivo");
        fileDialog.setSelectedFile(null);
        int action = fileDialog.showOpenDialog(this);
        if (action != JFileChooser.APPROVE_OPTION) {
            return;
        }
        File file = fileDialog.getSelectedFile();

        try {
            FileInputStream in = new FileInputStream(file);
            Document doc = new DefaultStyledDocument();
            pnTxt.getEditorKit().read(in, doc, 0);
            pnTxt.setDocument(doc);
            in.close();
            editFile = file;
            setTitle("Editor de Texto: " + editFile.getName());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error, no se puede leer el archivo " + e.getMessage());
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error, no se puede encontrar el archivo " + e.getMessage());   
        }
    }

    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
        if (editFile != null) 
        {   
            guardar();
        } else 
        {
            guardarComo();
        }
    }//GEN-LAST:event_btGuardarActionPerformed

    private void btGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarComoActionPerformed
        guardarComo();
    }//GEN-LAST:event_btGuardarComoActionPerformed

    private void btSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btSalirActionPerformed

    private void btCortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCortarActionPerformed
        pnTxt.cut();
    }//GEN-LAST:event_btCortarActionPerformed

    private void btCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCopiarActionPerformed
        pnTxt.copy();
    }//GEN-LAST:event_btCopiarActionPerformed

    private void btPegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPegarActionPerformed
        pnTxt.paste();
    }//GEN-LAST:event_btPegarActionPerformed

    private void btNegritaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNegritaActionPerformed

    }//GEN-LAST:event_btNegritaActionPerformed

    private void btCursivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCursivaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btCursivaActionPerformed

    private void btSubrayadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSubrayadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btSubrayadoActionPerformed

    private void btFuenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFuenteActionPerformed
        fuente();
    }//GEN-LAST:event_btFuenteActionPerformed

    private void btTamañoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTamañoActionPerformed
        tamaño();
    }//GEN-LAST:event_btTamañoActionPerformed

    private void btColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btColorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btAbrir;
    private javax.swing.JMenu btArchivo;
    private javax.swing.JMenu btAvanzado;
    private javax.swing.JMenuItem btColor;
    private javax.swing.JMenuItem btCopiar;
    private javax.swing.JMenuItem btCortar;
    private javax.swing.JMenuItem btCursiva;
    private javax.swing.JMenu btEdicion;
    private javax.swing.JMenuItem btFuente;
    private javax.swing.JMenuItem btGuardar;
    private javax.swing.JMenuItem btGuardarComo;
    private javax.swing.JMenuItem btNegrita;
    private javax.swing.JMenuItem btNuevo;
    private javax.swing.JMenuItem btPegar;
    private javax.swing.JMenuItem btSalir;
    private javax.swing.JMenuItem btSubrayado;
    private javax.swing.JMenuItem btTamaño;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTextPane pnTxt;
    // End of variables declaration//GEN-END:variables

    private void nuevo() {
        pnTxt.setText("");
        editFile = null;
        setTitle("Block de notas: Nuevo");
    }

    private void guardarComo() 
    {
        File selectedFile;
        if (fileDialog == null) 
        {
            fileDialog = new JFileChooser();
        }
        if (editFile == null) 
        {
            selectedFile = new File("temporal.txt");
        } else 
        {
            selectedFile = new File(editFile.getName());
        }
        fileDialog.setSelectedFile(selectedFile);
        fileDialog.setDialogTitle("Seleccionar Archivo a Guardar");
        int option = fileDialog.showSaveDialog(this);
        //SI CANCELA NOS SALIMOS
        if (option != JFileChooser.APPROVE_OPTION) 
        {
            return;
        }
        selectedFile = fileDialog.getSelectedFile();
        if (selectedFile.exists()) 
        {  // Ask the user whether to replace the file.
            int response = JOptionPane.showConfirmDialog(this,
                    "El fichero \"" + selectedFile.getName()
                    + "\" ya existe.\nDesea reemplazarlo?",
                    "Confirmar Cambios",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.WARNING_MESSAGE);
            if (response != JOptionPane.YES_OPTION) {
                return;  // User does not want to replace the file.
            }
        }
         
        try 
        {
            OutputStream out = new FileOutputStream(selectedFile);
            Document doc = pnTxt.getDocument();
            pnTxt.getEditorKit().write(out, doc, 0, doc.getLength());
            editFile = selectedFile;
            setTitle("Editor de texto: " + editFile.getName());
        } 
        catch (IOException e) 
        {
            JOptionPane.showMessageDialog(this,
                    "Error al escribir el archivo:\n" + e);
        } 
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(this,
                    "Error no se encuentra el archivo:\n" + e.getMessage());
            return;
        }
    }

    private void guardar() 
    {
        File selectedFile = new File(editFile.getPath());
        try 
        {
            OutputStream out = new FileOutputStream(selectedFile);
            Document doc = pnTxt.getDocument();
            pnTxt.getEditorKit().write(out, doc, 0, doc.getLength());
            setTitle("Editor de texto: " + editFile.getName());
        } 
        catch (IOException e) 
        {
            JOptionPane.showMessageDialog(this,
                    "Error al escribir el archivo:\n" + e);
        } catch (BadLocationException ex) 
        {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
    }

    private String fuente() {
        String nombre;
                
        String[] nombres = {"Arial", "Berlin Sans FB","Calibri", "Comic Sans MS", "Impact", "Monotype Corsiva", "Tahoma","Times New Roman","Verdana"};
        Object selection = JOptionPane.showInputDialog(null,"Elija una Fuente","Seleccion",JOptionPane.QUESTION_MESSAGE,null,nombres,null);
        //JOptionPane.showMessageDialog(null, "Introduciste: " + selection);
        nombre=selection.toString();
        pnTxt.setFont(new Font(nombre, WIDTH, 12));
        return nombre;
    }

    private int tamaño() {
        int tam;        
        String[] nombres = {"12", "14", "16", "18", "20", "22","24","26","28","30","32"};
        Object selection = JOptionPane.showInputDialog(null,"Elija el tamaño","Seleccion",JOptionPane.QUESTION_MESSAGE,null,nombres,null);
        //JOptionPane.showMessageDialog(null, "Introduciste: " + selection);
        tam=Integer.parseInt((String)selection);
        return tam;

    }

}
